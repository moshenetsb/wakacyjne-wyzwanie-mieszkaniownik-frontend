substitutions:
  _CLUSTER_NAME: mieszkaniownik-prod-cluster
  _CLUSTER_ZONE: europe-central2-a
  _NAMESPACE: production
  _IMAGE_NAME: mieszkaniownik-frontend
  _HELM_RELEASE: mieszkaniownik-frontend
  _ARTIFACT_REGISTRY: europe-west3-docker.pkg.dev
  _REPOSITORY: mieszkaniownik-repo

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"

steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: "get-secrets"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Fetching secrets..."
        VITE_GOOGLE_MAPS_API_KEY=$$(gcloud secrets versions access latest --secret=google-maps-api-key-prod)
        VITE_API_URL=$$(gcloud secrets versions access latest --secret=vite-api-url-prod)
        echo "VITE_GOOGLE_MAPS_API_KEY=$$VITE_GOOGLE_MAPS_API_KEY" > /workspace/build-secrets.env
        echo "VITE_API_URL=$$VITE_API_URL" >> /workspace/build-secrets.env
        echo "Secrets retrieved successfully"

  - name: "gcr.io/cloud-builders/docker"
    id: "build-image"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        source /workspace/build-secrets.env
        docker build \
          --tag=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA \
          --tag=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:latest \
          --build-arg=VITE_API_BASE_URL="$$VITE_API_URL" \
          --build-arg=VITE_GOOGLE_MAPS_API_KEY="$$VITE_GOOGLE_MAPS_API_KEY" \
          --cache-from=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:latest \
          .
    waitFor: ["get-secrets"]

  - name: "gcr.io/cloud-builders/docker"
    id: "push-image"
    args:
      - "push"
      - "${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA"
    waitFor: ["build-image"]

  - name: "gcr.io/cloud-builders/docker"
    id: "push-latest"
    args:
      - "push"
      - "${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:latest"
    waitFor: ["build-image"]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "get-credentials"
    args:
      - "container"
      - "clusters"
      - "get-credentials"
      - "${_CLUSTER_NAME}"
      - "--zone=${_CLUSTER_ZONE}"
    waitFor: ["push-latest"]

  - name: "gcr.io/$PROJECT_ID/helm"
    id: "helm-deploy"
    args:
      - "upgrade"
      - "--install"
      - "${_HELM_RELEASE}"
      - "./helm-chart-frontend"
      - "--namespace=${_NAMESPACE}"
      - "--create-namespace"
      - "--values=./helm-chart-frontend/values.yaml"
      - "--values=./helm-chart-frontend/values-prod.yaml"
      - "--set=frontend.image.repository=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}"
      - "--set=frontend.image.tag=$SHORT_SHA"
      - "--set=global.imageRegistry="
      - "--wait"
      - "--timeout=10m"
    waitFor: ["get-credentials"]

  - name: "gcr.io/cloud-builders/kubectl"
    id: "verify-deployment"
    args:
      - "rollout"
      - "status"
      - "deployment/${_HELM_RELEASE}"
      - "-n"
      - "${_NAMESPACE}"
      - "--timeout=5m"
    waitFor: ["helm-deploy"]

images:
  - "${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$SHORT_SHA"
  - "${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:latest"

timeout: "1800s"
